---
layout: post
title: Centroid
wordpress_id: 648
wordpress_url: http://ioimalaysia.org/?page_id=648
categories: []
tags: []
---
## Problem
You are given a coordinates of a triangle's corners, ``(x<sub>1</sub>,y<sub>1</sub>)``, ``(x<sub>2</sub>,y<sub>2</sub>)`` and ``(x<sub>3</sub>,y<sub>3</sub>)``. Find the coordinates of the [centroid of the triangle](http://www.mathopenref.com/trianglecentroid.html) ``(x<sub>c</sub>,y<sub>c</sub>)``, given that ``x<sub>c</sub>=(x<sub>1</sub>+x<sub>2</sub>+x<sub>3</sub>)/3`` and ``y<sub>c</sub>=(y<sub>1</sub>+y<sub>2</sub>+y<sub>3</sub>)/3``.### Input Format:
``x<sub>1</sub> y<sub>1</sub>````x<sub>2</sub> y<sub>2</sub>````x<sub>3</sub> y<sub>3</sub>``### Output Format:
``x<sub>c</sub> y<sub>c</sub>``### Sample Input:
``0 0````1 1````2 5``### Sample Output:
``1 2``## Approach
This is a rather straightforward problem - we just have to apply the formula given in the statement. The main aim of this problem is to teach you how to read space-separated inputs and print space-separated outputs.## Handling Space-Separated Output
Notice something about the input and output format in this problem that is different from FizzBuzz and Representative - each line of input and output has 2 values instead of 1.In a programming contest, if the output is space-separated instead of line-separated, printing the output line-separated will result in a wrong answer. Take note that``2 5``is different from``2````5``Suppose we have the coordinates of the centroid. The following program will result in a wrong answer.<script src="//repl.it/embed/BKME/25.js"></script> Even though the values are correct, the format is wrong. To print more than one value on a line, we can use ``print(v<sub>1</sub>,v<sub>2</sub>,...)``. This will automatically separate each value with a space. Hence, the following will print the output in the format the problem specified.<script src="//repl.it/embed/BKME/35.js"></script>## Input
Let's try writing some code below that reads the coordinates of just one point ``x y`` using ``int(input())``.<script src="//repl.it/embed/BKME/1.js"></script> **Our "Solution": ** [https://repl.it/BKME/3](https://repl.it/BKME/3)What happens if you input ``0 0`` into the program above? The following error occurs: ``ValueError: invalid literal for int() with base 10: '0 0'``The error occurs because ``input()`` reads the input line by line. For each line of input, ``input()`` returns a string. So, when we keyed in ``0 0``, the program tried to type-cast the string "0 0" as an integer - which does not work. For the same reason, the following code will return an error when we key in two numbers in the same line.<script src="//repl.it/embed/BKME/6.js"></script>Some problems in the MCC will have input and output formatted like Centroid, as it may be more natural to format the input and output as space-separated values rather than line separated values. Thus, we need a way of dealing with space-separated input.## Handling Space-Separated Input
We begin with the following code:<script src="//repl.it/embed/BKME/9.js"></script> The above stores the x and y coordinates in a string. Keying in ``2 5`` results in the string "2 5". We know that we cannot typecast this string into integers directly. However, we do know that we can typecast the string "2" into the integer ``2`` and the string "5" into the integer ``5``. So, if we can somehow split the string into the individual numbers, we can do the typecasting.Thankfully, we can split a string using the [``split()``](http://www.tutorialspoint.com/python/string_split.htm) method. ``split()`` splits a string into a list of strings which are separated by white-space in the original string (i.e. if the string is a sentence, ``split()`` converts it into a list of the words in the sentence).<script src="//repl.it/embed/BKMY.js"></script>You can also use other values as separators (perhaps commas), but for our purposes we don't have to do that.So now we have a slightly improved version of what we started with:<script src="//repl.it/embed/BKME/10.js"></script>We now have a list of strings. We just have to apply the ``int()`` type-constructor to each string in the list, and then we are done.<script src="//repl.it/embed/BKME/12.js"></script>**Our Solution: **[https://repl.it/BKME/11](https://repl.it/BKME/11)## List Unpacking
Our current version of the code for reading the coordinates for the point is as follows.<script src="//repl.it/embed/BKME/37.js"></script>However, the intermediate variable ``xy`` seems a bit unnecessary, as we ultimately want to work with ``x`` and ``y``, and we'd like to avoid the hassle of indexing a list of strings. We can make our code neater by "unpacking" ``input().split()`` directly.<script src="//repl.it/embed/BKME/27.js"></script>This works for any list, as long as the number of variables on the left hand side is equal to the number of elements in the list.We can now put all of the above together to read the input for the coordinates of a point.<script src="//repl.it/embed/BKME/38.js"></script> **Our Solution: **[https://repl.it/BKME/41](https://repl.it/BKME/41) Note: Right now we are reading in some space-separated numbers which we'd like to assign to separate variables. If reading in a _list_ of space-separated numbers, then it may be more natural to store the numbers in a list. How would you read the input in that scenario?The next section on alternative methods is optional. You can skip over to the last section to solve Centroid now.## Alternative Methods (Optional)
We can use the [``map()`` function](https://infohost.nmt.edu/tcc/help/pubs/python/web/map-function.html) or [list comprehensions](http://www.secnetix.de/olli/Python/list_comprehensions.hawk) to read space-separated input. These are advanced concepts which are **not required** for the MCC, but you can read up on them if you'd like.### map()
<script src="//repl.it/embed/BKbr/1.js"></script>### List Comprehension
<script src="//repl.it/embed/BKbr.js"></script> Note: Instead, of using list comprehensions, you can also use [generators](http://www.learnpython.org/en/Generators) in a similar fashion.## Solution
Now, you can solve Centroid.<script src="//repl.it/embed/BKME/31.js"></script>**Our Solution: **[https://repl.it/BKHZ/3](https://repl.it/BKHZ/3)
