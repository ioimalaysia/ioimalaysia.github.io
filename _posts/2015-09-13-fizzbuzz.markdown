---
layout: post
title: FizzBuzz
wordpress_id: 540
wordpress_url: http://ioimalaysia.org/?page_id=540
categories: []
tags: []
---
## Problem
We start with the [Fizz Buzz](http://c2.com/cgi/wiki?FizzBuzzTest) programming challenge. Your task is to write a program that prints numbers from **S** to **E** (inclusive of both **S** and **E**). But for multiples of 3, print ``Fizz`` instead of that number and for multiples of 5, print ``Buzz``. For numbers which are both multiples of 3 and 5, print ``FizzBuzz``.### Input Format:
``S````E``### Output Format:
``S````S+1````S+2````...````E-1````E``Where each line contains either a number, ``Fizz``, ``Buzz`` or ``FizzBuzz``, as per the task statement.### Sample Input:
``8````16``### Sample Output:
``8````Fizz````Buzz````11````Fizz````13````14````FizzBuzz````16``## Approach
The first thing to do when attempting to solve any computing contest problem is to _think of a solution_.For this problem, all we have to do is to _simulate the process_. The problem statement already tells us the behavior we need to program - what remains is for us to translate it into code.## Printing and Loops
First, let us **print all the numbers from S=8 to E=16 (inclusive)**. For now, we will not worry about how to print ``Fizz``, ``Buzz`` or ``FizzBuzz``.So how do we even print a number? To print anything in Python we use the ``print()`` function. The ``print()`` function prints whatever is enclosed between the parenthesis. We use the newer version of Python, namely Python 3. In Python 2, ``print`` can be called without the parenthesis.We have embedded some Python 3 code using an online interpreter called [repl.it](https://repl.it/languages/Python3). Try clicking the **run** button to see what the code prints. After that, you can click **edit on repl.it** to play around with the code. We highly encourage you to do so!You can print [strings](http://www.tutorialspoint.com/python/python_strings.htm) like ``Hello World`` by putting them in between quotes.<script src="//repl.it/embed/BG8m/1.js"></script>**Note:** You may have noticed that when running the above code, the last line of output is ``None``. You can safely ignore this. (If you'd like to know, it is the result of the repl.it interpreter trying to print out the return value of the program, which in this case is ``None``.) You can also print [numbers](http://www.tutorialspoint.com/python/python_numbers.htm).<script src="//repl.it/embed/BG8o.js"></script>Now, we have a way to print all the numbers from 8 to 16.<script src="//repl.it/embed/BGf8.js"></script>What's wrong with this? Firstly, it is incredibly tedious. But more importantly this method doesn't work if we're trying to print a range that is variable, with different values of **S** and **E**. (A common mistake beginners make is forgetting that they are not trying to solve a specific instance of a problem, but the _general_ problem.) A better way to print all the numbers from 8 to 16 would be to use [for loops](http://www.tutorialspoint.com/python/python_for_loop.htm).<script src="//repl.it/embed/BGfd.js"></script>The ``range()`` function, when given two numbers as input, results in a range that begins with the first number and ends _right before_ the second number. For example, ``range(8,17)`` corresponds to the numbers from 8 to 16 (inclusive) because 16 is _right before_ 17. Hence, the code above is basically saying "for each number in this range, print it out".Now, try printing all numbers given **S** and **E** values. Go ahead, click edit and try it out yourself.<script src="//repl.it/embed/BGgN.js"></script>**Note:** The ``#`` sign starts a comment line. This is only meant for humans to read, so that we can understand the code better. The computer interpreter will ignore it. For more info, see [Python Basic Syntax](http://www.tutorialspoint.com/python/python_basic_syntax.htm). **Our Solution:** [https://repl.it/BGgN/1](https://repl.it/BGgN/1). Note that this is our code, which is one of many valid codes. Your code might be valid too even if it is written differently. For instance, [here](https://repl.it/BGgN/2) is another equally valid way to write the code. Check what your code prints v.s. what our code prints, and make sure it is the same. Understand the differences in coding style, if any.## Conditions
Now, let us try to make our program print ``Fizz``, ``Buzz`` or ``FizzBuzz`` when appropriate. To do so, we can use [if/else](http://www.tutorialspoint.com/python/python_decision_making.htm) statements. Here is some simple code checking if ``n`` is greater than 10. If it is, then the block of code which is part of the indented if-block will execute.<script src="//repl.it/embed/BHNu/1.js"></script>We can also get the code to do something in the case that ``n`` is not greater than 10.<script src="//repl.it/embed/BHNu/2.js"></script>We can also add additional branching by using the ``elif`` statement.<script src="//repl.it/embed/BHNu/4.js"></script>To check if a number is divisible by some other number, we can use the ``%`` [operator](http://www.tutorialspoint.com/python/python_basic_operators.htm). ``a % b`` returns the remainder when ``a`` is divided by ``b``.<script src="//repl.it/embed/BHOK/4.js"></script>Now you know enough to deal with the ``Fizz`` and ``Buzz``. But what about the ``FizzBuzz`` case? To check that a number is both divisible by 3 and 5, we can use the ``and`` operator.<script src="//repl.it/embed/BHOK/3.js"></script>Now, try printing all numbers given S and E values. Replace all numbers divisible by 3 with ``Fizz``, all numbers divisible by 5 with ``Buzz``, and all numbers divisible by both 3 and 5 with ``FizzBuzz``. Once again, click edit and try it out yourself.<script src="//repl.it/embed/BHOK/2.js"></script>**Our solution: **[https://repl.it/BGgN/3 ](https://repl.it/BGgN/3)## Input
All we are missing now is some way to get input from the keyboad for ``S`` and ``E``. To get input, use the ``input()`` function. The ``input()`` reads input from the keyboard, and returns the value of the input. To store the value, just assign it to a [variable](http://www.tutorialspoint.com/python/python_variable_types.htm), eg. ``x = input()``. To be able to type in input, please open the following code on the repl.it site by clicking **edit on repl.it** before running it.<script src="//repl.it/embed/BEp8/3.js"></script>However, ``input()`` reads keyboard input as a string by default. For our purposes, we'd like to read integers. To do so, we can call the ``int()`` method, which will typecast the input as an integer. The ``type()`` function can tell us what the type of a variable is.<script src="//repl.it/embed/BEp8/4.js"></script><script src="//repl.it/embed/BEp8/7.js"></script>Now, you can solve the FizzBuzz task in its entirety.<script src="//repl.it/embed/BEp8/6.js"></script>**Our Solution:**[ https://repl.it/BGgN/5](https://repl.it/BGgN/5)Now, you should have enough programming knowledge to solve [Divisibilities](https://www.hackerrank.com/contests/mcc-2015-practice/challenges/mcc-divisibilities) on our practice site. Go ahead and try to solve it!
